version: "3.9"

services:
  web:
    # Берем Dockerfile из каталога django_app
    build: ./django_app
    # Запускаем тестовый сервер
    command: gunicorn stocks_products.wsgi:application --bind 0.0.0.0:5000
    # куда будут помещены данные из каталога django_app
    volumes:
      - ./django_app/:/usr/src/django_app/
      - ./django_app/static:/usr/src/django_app/static/
    # Открываем внутренний порт 5000 на наружный 8000
#    expose:
#      - 5000
#    ports:
#      - 8000:5000
    # Файл содержащий переменные для контейнера
    env_file:
      - ./django_app/.env
    depends_on:
      - db_postgres
  db_postgres:
    image: postgres:latest
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    env_file:
      - ./django_app/.env
#    environment:
#      - POSTGRES_USER=my_user
#      - POSTGRES_PASSWORD=my_password
#      - POSTGRES_DB=my_db
  nginx:
    build: ./nginx
    volumes:
      - ./django_app/static:/usr/src/django_app/static/
    ports:
      - 1337:80
    depends_on:
      - web
volumes:
  postgres_volume:


#  pgdata:
#
#services:
#  web:
#    build: .
#    ports:
#      - 8000:5000
#    volumes:
#      - .:/code
#    environment:
#        FLASK_DEBUG: True
#  redis:
#    image: redis:alpine
#  postgredb:
#    image: postgres:latest
#    ports:
#      - 5555:5432
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#      #- .:/docker-entrypoint-initdb.d
#      - .logs:/var/log
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U admin1 -d new_db"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 30s
#    env_file:
#      - .env
#  dbeaver:
#    image: dbeaver/cloudbeaver:latest
#    ports:
#      - 8080:8978
#    restart: unless-stopped

#  pgadmin:
#    image: dpage/pgadmin4:latest
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "admin1@yandex.ru"
#      PGADMIN_DEFAULT_PASSWORD: "admin1pwd"
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - ./pgadmin:/var/lib/pgadmin
#    #restart: unless-stopped
#    ports:
#      - 5050:80
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"
#          memory: 2G